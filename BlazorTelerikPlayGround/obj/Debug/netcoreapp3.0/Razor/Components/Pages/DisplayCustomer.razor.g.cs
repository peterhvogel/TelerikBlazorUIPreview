#pragma checksum "C:\Users\peter\Source\Repos\BlazorTelerikPlayground\Components\Pages\DisplayCustomer.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "186b76c0eb7e77144020fa01f5720d9a6ac5504e"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorTelerikPlayground.Components.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using BlazorTelerikPlayground.Components.Shared;
    using Customers.Common;
    using Kendo.Blazor.Components.Grid;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Components.RouteAttribute("/displaycustomers")]
    public class DisplayCustomer : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.AddMarkupContent(0, "<h1>List Customers</h1>\r\n Status: ");
            builder.AddContent(1, status);
            builder.AddMarkupContent(2, " <br>\r\n");
            builder.OpenComponent<Kendo.Blazor.Components.Button.KendoButton>(3);
            builder.AddAttribute(4, "OnButtonClick", new System.Action(GetCustomers));
            builder.AddAttribute(5, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((builder2) => {
                builder2.AddContent(6, "Get Customers");
            }
            ));
            builder.CloseComponent();
            builder.AddContent(7, "\r\n");
            builder.OpenComponent<Kendo.Blazor.Components.Button.KendoButton>(8);
            builder.AddAttribute(9, "Enable", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.Boolean>(status!="Ready"));
            builder.AddAttribute(10, "OnButtonClick", new System.Action(() => { SaveCustomers(); }));
            builder.AddAttribute(11, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((builder2) => {
                builder2.AddContent(12, "Save Customers");
            }
            ));
            builder.CloseComponent();
            builder.AddContent(13, "\r\n");
            builder.OpenComponent<Kendo.Blazor.Components.Button.KendoButton>(14);
            builder.AddAttribute(15, "Enable", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.Boolean>(status!="Ready"));
            builder.AddAttribute(16, "OnButtonClick", new System.Action(() => { Page(); }));
            builder.AddAttribute(17, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((builder2) => {
                builder2.AddContent(18, "Page Forward");
            }
            ));
            builder.CloseComponent();
            builder.AddContent(19, "\r\n\r\n");
            builder.OpenComponent<Kendo.Blazor.Components.Grid.KendoGrid<Customer>>(20);
            builder.AddAttribute(21, "PageSize", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.Int32>(5));
            builder.AddAttribute(22, "Sortable", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.Boolean>(true));
            builder.AddAttribute(23, "KendoGridColumns", (Microsoft.AspNetCore.Components.RenderFragment)((builder2) => {
                builder2.AddContent(24, "\r\n        ");
                builder2.OpenComponent<Kendo.Blazor.Components.Grid.KendoGridColumn>(25);
                builder2.AddAttribute(26, "Field", "Id");
                builder2.AddAttribute(27, "Title", "Customer Id");
                builder2.CloseComponent();
                builder2.AddContent(28, "\r\n        ");
                builder2.OpenComponent<Kendo.Blazor.Components.Grid.KendoGridColumn>(29);
                builder2.AddAttribute(30, "Field", "FirstName");
                builder2.AddAttribute(31, "Title", "First Name");
                builder2.CloseComponent();
                builder2.AddContent(32, "\r\n        ");
                builder2.OpenComponent<Kendo.Blazor.Components.Grid.KendoGridColumn>(33);
                builder2.AddAttribute(34, "Field", "LastName");
                builder2.AddAttribute(35, "Title", "Last Name");
                builder2.CloseComponent();
                builder2.AddContent(36, "\r\n    ");
            }
            ));
            builder.AddComponentReferenceCapture(37, (__value) => {
#line 11 "C:\Users\peter\Source\Repos\BlazorTelerikPlayground\Components\Pages\DisplayCustomer.razor"
                 grid = (Kendo.Blazor.Components.Grid.KendoGrid<Customer>)__value;

#line default
#line hidden
            }
            );
            builder.CloseComponent();
        }
        #pragma warning restore 1998
#line 20 "C:\Users\peter\Source\Repos\BlazorTelerikPlayground\Components\Pages\DisplayCustomer.razor"
            

    private KendoGrid<Customer> grid { get; set; }
    private string status = "Ready";
    private IEnumerable<Customer> customers = null;

    protected override void OnAfterRender()
    {
        GetCustomers();
        grid.Data = customers;
        grid.Pageable = true;
        base.OnAfterRender();
    }


    public async void GetCustomers()
    {
        HttpClient hc = new HttpClient();
        HttpResponseMessage rm = await hc.GetAsync("https://localhost:5001/customers");
        customers = await rm.Content.ReadAsAsync<IEnumerable<Customer>>();
        if (rm.IsSuccessStatusCode)
        {
            status = "Retrieved";
        }
        else
        {
            status = rm.StatusCode.ToString();
        }
        StateHasChanged();
    }

    public async void SaveCustomers()
    {

        HttpClient hc = new HttpClient();

        HttpResponseMessage rm = await hc.PutAsJsonAsync("https://localhost:5001/customers", customers.First());
        if (rm.IsSuccessStatusCode)
        {
            status = "Updated";
        }
        else
        {
            status = rm.StatusCode.ToString();
        }
        StateHasChanged();
    }
    private void Page()
    {
        grid.Page = 2;
        StateHasChanged();
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
